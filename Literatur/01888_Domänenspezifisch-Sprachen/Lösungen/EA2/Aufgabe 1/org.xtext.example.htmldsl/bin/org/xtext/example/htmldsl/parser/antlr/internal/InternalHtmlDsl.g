/*
 * generated by Xtext 2.9.1
 */
grammar InternalHtmlDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.htmldsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.htmldsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.htmldsl.services.HtmlDslGrammarAccess;

}

@parser::members {

 	private HtmlDslGrammarAccess grammarAccess;

    public InternalHtmlDslParser(TokenStream input, HtmlDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "WebSite";
   	}

   	@Override
   	protected HtmlDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleWebSite
entryRuleWebSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebSiteRule()); }
	iv_ruleWebSite=ruleWebSite
	{ $current=$iv_ruleWebSite.current; }
	EOF;

// Rule WebSite
ruleWebSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getWebSiteAccess().getPagesPageParserRuleCall_0());
			}
			lv_pages_0_0=rulePage
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getWebSiteRule());
				}
				add(
					$current,
					"pages",
					lv_pages_0_0,
					"org.xtext.example.htmldsl.HtmlDsl.Page");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRulePage
entryRulePage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	iv_rulePage=rulePage
	{ $current=$iv_rulePage.current; }
	EOF;

// Rule Page
rulePage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='page'
		{
			newLeafNode(otherlv_0, grammarAccess.getPageAccess().getPageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPageAccess().getBodyElementsBodyElementParserRuleCall_3_0());
				}
				lv_bodyElements_3_0=ruleBodyElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRule());
					}
					add(
						$current,
						"bodyElements",
						lv_bodyElements_3_0,
						"org.xtext.example.htmldsl.HtmlDsl.BodyElement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPageAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleBodyElement
entryRuleBodyElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyElementRule()); }
	iv_ruleBodyElement=ruleBodyElement
	{ $current=$iv_ruleBodyElement.current; }
	EOF;

// Rule BodyElement
ruleBodyElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBodyElementAccess().getHeading1ParserRuleCall_0());
		}
		this_Heading1_0=ruleHeading1
		{
			$current = $this_Heading1_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBodyElementAccess().getHeading2ParserRuleCall_1());
		}
		this_Heading2_1=ruleHeading2
		{
			$current = $this_Heading2_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBodyElementAccess().getParagraphParserRuleCall_2());
		}
		this_Paragraph_2=ruleParagraph
		{
			$current = $this_Paragraph_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBodyElementAccess().getAnchorParserRuleCall_3());
		}
		this_Anchor_3=ruleAnchor
		{
			$current = $this_Anchor_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleHeading1
entryRuleHeading1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeading1Rule()); }
	iv_ruleHeading1=ruleHeading1
	{ $current=$iv_ruleHeading1.current; }
	EOF;

// Rule Heading1
ruleHeading1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='h1'
		{
			newLeafNode(otherlv_0, grammarAccess.getHeading1Access().getH1Keyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeading1Access().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_text_2_0=RULE_STRING
				{
					newLeafNode(lv_text_2_0, grammarAccess.getHeading1Access().getTextSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHeading1Rule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getHeading1Access().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleHeading2
entryRuleHeading2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeading2Rule()); }
	iv_ruleHeading2=ruleHeading2
	{ $current=$iv_ruleHeading2.current; }
	EOF;

// Rule Heading2
ruleHeading2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='h2'
		{
			newLeafNode(otherlv_0, grammarAccess.getHeading2Access().getH2Keyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeading2Access().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_text_2_0=RULE_STRING
				{
					newLeafNode(lv_text_2_0, grammarAccess.getHeading2Access().getTextSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHeading2Rule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getHeading2Access().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	iv_ruleParagraph=ruleParagraph
	{ $current=$iv_ruleParagraph.current; }
	EOF;

// Rule Paragraph
ruleParagraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='p'
		{
			newLeafNode(otherlv_0, grammarAccess.getParagraphAccess().getPKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getParagraphAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_text_2_0=RULE_STRING
				{
					newLeafNode(lv_text_2_0, grammarAccess.getParagraphAccess().getTextSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParagraphRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getParagraphAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAnchor
entryRuleAnchor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnchorRule()); }
	iv_ruleAnchor=ruleAnchor
	{ $current=$iv_ruleAnchor.current; }
	EOF;

// Rule Anchor
ruleAnchor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='a'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnchorAccess().getAKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAnchorAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnchorRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAnchorAccess().getDestinationPageCrossReference_2_0());
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getAnchorAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
