package jetbrains.mps.samples.Kaja.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilders;
import jetbrains.mps.lang.dataFlow.DataFlowManager;

public class DFABuilders extends DataFlowBuilders {
  public void install(DataFlowManager manager) {
    manager.register("jetbrains.mps.samples.Kaja.structure.AbstractCommand", new AbstractCommand_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.CommandList", new CommandList_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.IfStatement", new IfStatement_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.LogicalExpression", new LogicalExpression_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.Not", new Not_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.Repeat", new Repeat_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.RoutineCall", new RoutineCall_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.RoutineDefinition", new RoutineDefinition_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.Script", new Script_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.Step", new Step_DataFlow());
    manager.register("jetbrains.mps.samples.Kaja.structure.While", new While_DataFlow());
  }
}
